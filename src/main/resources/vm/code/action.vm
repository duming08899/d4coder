package ${mainPkg}.action;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.beans.factory.annotation.Autowired;

import ${mainPkg}.model.${className};
import ${mainPkg}.service.I${className}Service;

import ${rootPkg}.framework.page.PaginationSupport;

@Controller
@RequestMapping("/manage/${variableName}")
public class ${className}Controller {

    private static Logger logger = LoggerFactory.getLogger(${className}Controller.class);

	@Autowired
	I${className}Service ${variableName}Service;

	@RequestMapping("/list")
	public String list(${className} obj, ModelMap model, String curPage) {
		PaginationSupport ps = new PaginationSupport();
		if (StringUtils.isNotBlank(curPage)) {
			ps.setCurPage(Integer.parseInt(curPage));
		}
		ps = ${variableName}Service.queryPage(obj, ps);
		model.put("ps", ps);
		model.put("vo", obj);
		return "/${webDir}/${prefix}_list";
	}

	@RequestMapping(value = "/add")
	public String add(${className} obj, ModelMap model,HttpServletRequest request) {
        if (request.getMethod().equalsIgnoreCase("get")) {
            return "/${webDir}/${prefix}_add";
        }
		try {
			${variableName}Service.insert(obj);
			model.put("res", 0);
		} catch (Exception e) {
			model.put("res", 1);
			e.printStackTrace();
		}
		return "/${webDir}/${prefix}_add";
	}
	
	@RequestMapping(value = "/modify",method={RequestMethod.GET})
	public String toModify(${className} obj, ModelMap model){
		obj = ${variableName}Service.selectById(obj.getId());
		model.put("vo", obj);
		return "/${webDir}/${prefix}_modify";
	}
	
	@RequestMapping(value = "/modify", method = { RequestMethod.POST })
	public String modify(${className} obj, ModelMap model) {
		try {
			${variableName}Service.update(obj);
			model.put("res", 0);
		} catch (Exception e) {
			model.put("res", 1);
			e.printStackTrace();
		}
		return "/${webDir}/${prefix}_modify";
	}

	@RequestMapping(value = "/upstatus", method = { RequestMethod.GET })
	@ResponseBody
	public String upstatus(String id, String status) {
		try {
			${className} obj = new ${className}();
			obj.setId(Integer.parseInt(id));
			${variableName}Service.update(obj);
			return "0";
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "1";
	}

	@InitBinder
	public void initBinder(WebDataBinder binder) {
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		dateFormat.setLenient(false);
		binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, true));
	}

}
